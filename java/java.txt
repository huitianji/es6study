基础：集合、线程安全方面的，例如谈谈 concurrentHashMap、violate的理解
架构：dubbo、springboot等微服务的了解、消息中间件的了解


看看有什么想法、踏实、是不是会不好管理等


中级 差不多的，工作经历可以的，，一般干活没问题，管理的团队，也有可能



人才管理系统
人才网app

微信公众号


好吧，，那要求不高，，，传统的 技术 都能实现，微服务是不需要的



多线程/并发

1. Java中常见的锁

互斥锁，读写锁，信号量

互斥锁，读写只能一个线程

读写锁，写只能一个线程，读可以多个线程

信号量，如停车场，能允许一定量的线程，满了则不能再进入，需要等别的线程释放资源。

2. 原子Atomic类，如何保证原子性，CAS硬件指令

在atomic类底层使用CAS硬件指令，来保证atomic的原子性。CAS在硬件级别实现了原子操作。

3. volatile，可见性问题的原因，硬件架构，L3 Cache，QPI，乐观锁

volatile：易变的。被修饰的变量在多线程中被改变时，别的线程能知道。

4. 如何实现一个线程安全的数据结构

new 一个volatile 的Atomatic变量，或者使用concurrent类型的集合，ConcurrentHashMap之类的。

5. 如何避免死锁

如果有两个锁的时候，如果先锁住第一个参数，再锁住第二个参数，这种情况就会产生死锁。

比如，第一个参数是A，第二个参数是B，如果第一个参数先锁，第二个参数后锁。在刚好锁住第一个参数，
第二次请求来了，刚好两个参数颠倒了就会锁住第二个参数，那就会造成死锁。

解决死锁：在需要锁住多个参数的时候，先把参数按固定的顺序排序，然后在对排序后的参数加锁，这样就有效的避免死锁。

6. 如何解决ABA问题

ABA问题：如果另一个线程修改V值假设原来是A，先修改成B，再修改回成A。当前线程的CAS操作无法分辨当前V值是否发生过变化。

用另一个标识判断某值是否有改变过。

7. Synchronized关键字的作用？

对Synchronized（）括号内的对象加互斥锁，不影响父类或者子类的访问。

8. Volatile关键字的作用？

可见的，当其中一个线程改变了volatile的变量时，别的使用这个变量的线程都能读取到最新值。



但是，这个并不能解决并发问题。比如第一个线程读取到值是3，第二个线程也读取了3，然后第一个线程+1放入了write区，
第二个线程+1也放到了write区，那么两个线程的值都是4，期望值是5，这时候还是会造成并发问题。


线程这块需要了解些

3， Linux常用命令有哪些？

4. 怎么看一个Java线程的资源耗用？

5. Load过高的可能性有哪些？、


11. 发现磁盘空间不够，如何快速找出占用空间最大的文件？

12. Java服务端问题排查（OOM，CPU高，Load高，类冲突）

15. grep，awk，sed； 是否自己写过shell脚本；

用Spring如何实现一个切面？

10. Spring 如何实现数据库事务？


Hibernate和Ibatis这类ORM框架的区别？什么是ORM，解决的痛点是什么？


Redis等缓存系统/中间件SQL/一致性Hash等


memcache与redis的区别


之前涉及的项目都用到了哪些框架？ 用过spring mvc吗


主要涉及spring mvc的，目前后端用spring mvc的 较多，也较为常用，


再者就是些redis、memcache、mongo的了解，其中redis、mongo，也是比较常用的，例如分布式锁，一般使用什么线程的比较快捷？




你这个要求不高，只要做过后端两三年的，都能胜任，会搭个后端项目，满足app的接口，

